*cheatkey.txt*      For Vim version 8.0 and Neovim      Last change: 2025 Aug 09

CHEATKEY - An intelligent cheatsheet for your keybindings

==============================================================================
CONTENTS                                                 *cheatkey-contents*

  1. Introduction........................................|cheatkey-introduction|
  2. Commands............................................|cheatkey-commands|
  3. Configuration.......................................|cheatkey-configuration|

==============================================================================
INTRODUCTION                                           *cheatkey-introduction*

`vim-cheatkey` is an intelligent Vim plugin. It not only allows you to
manually add descriptions to your keybindings but also automatically discovers
all keymaps in your environment and uses AI to generate accurate descriptions
for them.

==============================================================================
COMMANDS                                                   *cheatkey-commands*

*:CheatKey*
  Define a keybinding with a manual description. This has the highest priority.
  Usage: >
    :CheatKey <mode> <keys> <command> "description"
<
  Example: >
    :CheatKey n <leader>s :w<CR> "Save current file"
<

*:CheatKeyPanel*
  Show the keybinding cheatsheet panel.
  Usage: >
    :CheatKeyPanel
<

*:CheatKeySync*
  Asynchronously scan all keymaps and request AI-generated descriptions for
  those without one.
  Usage: >
    :CheatKeySync
<

==============================================================================
CONFIGURATION                                           *cheatkey-configuration*

It is recommended to map the |:CheatKeyPanel| command to a keybinding for
easy access. Example: `nmap <silent> <leader>? :CheatKeyPanel<CR>`

*g:cheatkey_ai_provider*
  (Optional) The AI provider to use. Default: `'gemini'`.
  Example: >
    let g:cheatkey_ai_provider = 'gemini'
<

*g:cheatkey_model_name*
  (Optional) The specific model name to use.
  Example: >
    let g:cheatkey_model_name = 'gemini-1.5-flash'
<

*g:cheatkey_api_key_command*
  (Required) A shell command that outputs your API key.
  Example: >
    let g:cheatkey_api_key_command = 'echo $GEMINI_API_KEY'
<

*g:cheatkey_prompt_template*
  (Optional) The prompt template for the AI. Must include `{rhs}`.
  Default: 'You are a Vim expert... {rhs} ...'
  Example: >
    let g:cheatkey_prompt_template = 'As a Vim expert, describe the function of this command in Chinese within 10 characters: "{rhs}".'
<

==============================================================================
 vim:tw=78:ts=8:sw=4:sts=4:et:ft=help:norl:
